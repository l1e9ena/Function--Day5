1. a. Print odd numbers using anonymous function:

let name = function(){
   var array = [1,2,3,4,5,6,7,8,9];
 for(var i = 0 ; i< array.length ; i++){
                        if(array[i]%2!=0){
                           console.log(array[i])
                        }
 }
 };
 
 name();

 Print odd numbers using IIFE function.

 let array = [1,2,3,4,5,7,8,9];

 
 (function () {
 for(var i = 0 ; i< array.length ; i++){
                        if(array[i]%2!=0){
                           console.log(array[i])
                        }
 }
 })(array);


1. b. Convert all the strings to title caps in an string array using anonymous function


let name = function(){
  var string = ("all is wEll");
  str = string.toLowerCase().split(' ');
                    for (var i = 0; i < str.length; i++) {
                      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
                    } 
                    console.log(str.join(' '));
  
  };
  name();

 Convert all the strings to title caps in an string array using IIFE function

 var string = ("all is wEll");
  
  (function () {
  str = string.toLowerCase().split(' ');
                    for (var i = 0; i < str.length; i++) {
                      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
                    } 
                    console.log(str.join(' '));
  
  })(string);

1. c. Sum of all numbers in an array using anonymous function:

let name = function() {
var array = [2,3,6];
var sum= 0;
for(var i=0; i<array.length; i++){
  sum = sum+array[i];
}
console.log(sum);
};

name();

Sum of all numbers in an array using IIFE function:

var array = [2,3,6];

(function () {
  var sum= 0;
  for(var i=0; i<array.length; i++){
  sum = sum+array[i];
}
console.log(sum);
})(array);

1.d. Return all the prime numbers in an array using anonymous function

let name = function(){
    var array = [5,7,4,3];
console.log(array);
for(let i=0; i<array.length; i++){
    if(array[i]%2==0){
        console.log("It is not a palindrome");
    }
else{
    console.log("It is a palindrome");
}
}
};
name();

Return all the prime numbers in an array using IIFE function
    
var array = [5,7,4,3];
    (function () {
for(let i=0; i<array.length; i++){
    if(array[i]%2==0){
        console.log("It is not a palindrome");
    }
else{
    console.log("It is a palindrome");
}
}
})(array);

1.e. Return all the palindromes in an array using anonymous function

let palindrome = function() {
    let string = "level"
    let arrayValues = string.split('');
    console.log(arrayValues);
    let reverseArrayValues = arrayValues.reverse();
    let reverseString = reverseArrayValues.join('');
    console.log(reverseString);
    if(string == reverseString) {
        console.log('It is a palindrome');
    }
    else {
        console.log('It is not a palindrome');
    }
    };
    palindrome();

Return all the palindromes in an array using IIFE function

let string = ("level");
    
   (function () {
    let arrayValues = string.split('');
    console.log(arrayValues);
    let reverseArrayValues = arrayValues.reverse();
    let reverseString = reverseArrayValues.join('');
    console.log(reverseString);
   
    if(string == reverseString) {
        console.log('It is a palindrome');
    }
    else {
        console.log('It is not a palindrome');
    }
    })(string);


1.f. Return median of two sorted arrays of the same size using anonymous function:

 function median(arr1, arr2){
    var concat = arr1.concat(arr2);
    console.log(concat);
    concat1 = concat.sort();
    console.log(concat1);
    var length = concat1.length;
    console.log(length);
    if(length % 2 == 1){
        console.log(concat[(length/2)-0.5])
    }
    else{
        console.log((concat[length/2]+concat[(length/2)-1])/2)
    }
    
}

arr1 = [1,3,5,7];
arr2 = [2,4,5];
median(arr1, arr2);


Return median of two sorted arrays of the same size using IIFE function

let arr1 = [1,3,5,7];
let arr2 = [2,4,5];
    
    (function (arr1, arr2) {
    var concat = arr1.concat(arr2);
    console.log(concat);
    concat1 = concat.sort();
    console.log(concat1);
    var length = concat1.length;
    console.log(length);
    if(length % 2 == 1){
        console.log(concat[(length/2)-0.5])
    }
    else{
        console.log((concat[length/2]+concat[(length/2)-1])/2)
    }
    
})


(arr1, arr2);

1.g. Return the duplicates of an array using anonymous function:

let duplicates = function()
{
    let arr = ["A", "B", "C", "A", "C"];
    console.log(arr);
    let duparr = [...new Set(arr)];
    console.log(duparr);
}
duplicates();

Return the duplicates of an array using IIFE function:

    var arr = ["A", "B", "C", "A", "C"];
 (function () { 
{
    console.log(arr);
    let duparr = [...new Set(arr)];
    console.log(duparr);
}
})(arr);

1.h. Rotate an array by K times using anonymous function

let name = function(array , k){
                          k = k % a.length;
                            if(k < 0){
                              k += a.length;
                            }

                            reverse(a, 0, a.length - k - 1);
                            reverse(a, a.length - k, a.length - 1);
                            reverse(a, 0, a.length - 1);
                          }name();

Rotate an array by K times using IIFE function

(function(array , k){
                          k = k % a.length;
                            if(k < 0){
                              k += a.length;
                            }

                            reverse(a, 0, a.length - k - 1);
                            reverse(a, a.length - k, a.length - 1);
                            reverse(a, 0, a.length - 1);
                          })([1,2,3,4] , 2)





3a.  Print odd numbers using arrow function

var oddNumbers = () => 
{
                  let array = [1,2,3,4,5,7,8,9];

                   for(var i = 0 ; i< array.length ; i++)
                   {
                        if(array[i]%2!=0){
                           console.log(array[i])
                        } 
                   }
}

oddNumbers();

3b.  Cont all the strings to title caps in an string array using arrow function

var titlecase = () =>
{
  let string = ("all is wEll");
  str = string.toLowerCase().split(' ');
                    for (var i = 0; i < str.length; i++) {
                      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
                    } 
                    console.log(str.join(' '));
}
  titlecase();

3.c. Sum of all numbers in an array using arrow function:


var sum = () =>
{

let array = [2,3,6];
  var sum= 0;
  for(var i=0; i<array.length; i++){
  sum = sum+array[i];
}
console.log(sum);
}
sum();

3.d.Return all the prime numbers in an array using arrow function

    var primeNumbers = () =>
    {
        let array = [5,7,4,3];

for(let i=0; i<array.length; i++){
    if(array[i]%2==0){
        console.log("It is not a Prime Number");
    }
else{
    console.log("It is a Prime Number");
}
}
}

primeNumbers();

3.e. Return all the palindromes in an array using arrow function

 var palindrome = () =>
    {
    let string = ("level");
    
   
    let arrayValues = string.split('');
    console.log(arrayValues);
    let reverseArrayValues = arrayValues.reverse();
    let reverseString = reverseArrayValues.join('');
    console.log(reverseString);
   
    if(string == reverseString) {
        console.log('It is a palindrome');
    }
    else {
        console.log('It is not a palindrome');
    }
    }
    palindrome();







                 


 